[config]
default_to_workspace = false

[env]
CARGO_TERM_COLOR = "always"
LINT_COMMIT_MSG_FROM_STDIN = "cargo bin conventional_commits_linter --allow-angular-type-only --from-stdin"

[tasks.pre-commit]
env = { RUSTFLAGS = "--deny warnings" }
run_task = { name = ["test", "clippy", "doc", "check_fmt"], parallel = true }

[tasks.ci_main]
env = { RUSTFLAGS = "--deny warnings" }
run_task = { name = ["test", "clippy", "doc", "check_fmt", "lint_pr_commit_msgs"], parallel = true }

[tasks.ci_post]
run_task = "no_untracked" 

[tasks.ci]
run_task = { name = ["ci_main", "ci_post"] }

[tasks.test]
command = "cargo"
args = ["test"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "--all-targets"]

[tasks.doc]
command = "cargo"
args = ["doc"]

[tasks.check_fmt]
command = "cargo"
args = ["fmt", "--check"]

[tasks.lint_commit_msg_from_stdin]
script = "$LINT_COMMIT_MSG_FROM_STDIN"

[tasks.lint_pr_commit_msgs]
condition = { env_true = ["GITHUB_BASE_REF"] }
script = '''
# workaround for https://gitlab.com/DeveloperC/conventional_commits_linter/-/issues/1
commits=$(git rev-list --skip=1 origin/$GITHUB_BASE_REF..HEAD)
for commit in $commits; do 
  git show --no-patch --format=%B $commit | \
  $LINT_COMMIT_MSG_FROM_STDIN || \
  exit_code=1
done
exit $exit_code
'''

[tasks.no_untracked]
script = '''
if [[ `git ls-files --exclude-standard --others` ]]; then
  echo "untracked files detected"
  exit 1
fi
'''
